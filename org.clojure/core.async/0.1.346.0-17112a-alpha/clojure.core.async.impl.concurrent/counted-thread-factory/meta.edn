{:ns "clojure.core.async.impl.concurrent", :name "counted-thread-factory", :file "clojure/core/async/impl/concurrent.clj", :type :fn, :src "(defn counted-thread-factory\n  \"Create a ThreadFactory that maintains a counter for naming Threads.\n     name-format specifies thread names - use %d to include counter\n     daemon is a flag for whether threads are daemons or not\"\n  [name-format daemon]\n  (let [counter (atom 0)]\n    (reify\n      ThreadFactory\n      (newThread [this runnable]\n        (doto (Thread. runnable)\n          (.setName (format name-format (swap! counter inc)))\n          (.setDaemon daemon))))))", :column 1, :line 15, :arglists ([name-format daemon]), :doc "Create a ThreadFactory that maintains a counter for naming Threads.\n     name-format specifies thread names - use %d to include counter\n     daemon is a flag for whether threads are daemons or not"}