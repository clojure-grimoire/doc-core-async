{:type :fn, :src "(defrecord Try [catch-block catch-exception finally-block continue-block]\n  IInstruction\n  (reads-from [this] [])\n  (writes-to [this] [])\n  (block-references [this] [catch-block finally-block continue-block])\n  IEmittableInstruction\n  (emit-instruction [this state-sym]\n    `[~'_ (add-exception-frame ~state-sym ~catch-block ~catch-exception ~finally-block ~continue-block)]))", :ns "clojure.core.async.impl.ioc-macros", :name "->Try", :file "clojure/core/async/impl/ioc_macros.clj", :column 1, :line 391, :arglists ([catch-block catch-exception finally-block continue-block]), :doc "Positional factory function for class clojure.core.async.impl.ioc_macros.Try."}