{:type :fn, :src "(defrecord ProcessExceptionWithValue [value]\n  IInstruction\n  (reads-from [this] [value])\n  (writes-to [this] [])\n  (block-references [this] [])\n  ITerminator\n  (terminate-block [this state-sym _]\n    `(do (aset-all! ~state-sym\n                    VALUE-IDX\n                    ~value)\n         (process-exception ~state-sym)\n         :recur)))", :ns "clojure.core.async.impl.ioc-macros", :name "map->ProcessExceptionWithValue", :file "clojure/core/async/impl/ioc_macros.clj", :column 1, :line 400, :arglists ([m__6206__auto__]), :doc "Factory function for class clojure.core.async.impl.ioc_macros.ProcessExceptionWithValue, taking a map of keywords to field values."}