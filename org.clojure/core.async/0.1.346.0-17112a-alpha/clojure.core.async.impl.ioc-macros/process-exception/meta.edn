{:ns "clojure.core.async.impl.ioc-macros", :name "process-exception", :file "clojure/core/async/impl/ioc_macros.clj", :type :fn, :src "(defn process-exception [state]\n  (let [exception-frame (aget-object state EXCEPTION-FRAMES)\n        catch-block (:catch-block exception-frame)\n        catch-exception (:catch-exception exception-frame)\n        exception (aget-object state CURRENT-EXCEPTION)]\n    (cond\n     (and exception\n          (not exception-frame))\n     (throw exception)\n\n     (and exception\n          catch-block\n          (instance? catch-exception exception))\n     (aset-all! state\n                STATE-IDX\n                catch-block\n                VALUE-IDX\n                exception\n                CURRENT-EXCEPTION\n                nil\n                EXCEPTION-FRAMES\n                (assoc exception-frame\n                  :catch-block nil\n                  :catch-exception nil))\n\n\n     (and exception\n          (not catch-block)\n          (not (:finally-block exception-frame)))\n\n     (do (aset-all! state\n                    EXCEPTION-FRAMES\n                    (:prev exception-frame))\n         (recur state))\n\n     (and exception\n          (not catch-block)\n          (:finally-block exception-frame))\n     (aset-all! state\n                STATE-IDX\n                (:finally-block exception-frame)\n                EXCEPTION-FRAMES\n                (assoc exception-frame\n                  :finally-block nil))\n\n     (and (not exception)\n          (:finally-block exception-frame))\n     (do (aset-all! state\n                    STATE-IDX\n                    (:finally-block exception-frame)\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :finally-block nil)))\n\n     (and (not exception)\n          (not (:finally-block exception-frame)))\n     (do (aset-all! state\n                   STATE-IDX\n                   (:continue-block exception-frame)\n                   EXCEPTION-FRAMES\n                   (:prev exception-frame))))))", :column 1, :line 423, :arglists ([state])}