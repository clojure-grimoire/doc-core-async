{:ns "clojure.core.async.lab", :name "multiplex", :file "clojure/core/async/lab.clj", :type :fn, :src "(defn multiplex\n  \"Returns a multiplexing read port which, when read from, produces a\n  value from one of ports.\n\n  If at read time only one port is available to be read from, the\n  multiplexing port will return that value. If multiple ports are\n  available to be read from, the multiplexing port will return one\n  value from a port chosen non-deterministicly. If no port is\n  available to be read from, parks execution until a value is\n  available.\"\n  [& ports]\n  (->MultiplexingReadPort (mutex/mutex) (HashSet. ^Collection ports)))", :column 1, :line 69, :arglists ([& ports]), :doc "Returns a multiplexing read port which, when read from, produces a\n  value from one of ports.\n\n  If at read time only one port is available to be read from, the\n  multiplexing port will return that value. If multiple ports are\n  available to be read from, the multiplexing port will return one\n  value from a port chosen non-deterministicly. If no port is\n  available to be read from, parks execution until a value is\n  available."}