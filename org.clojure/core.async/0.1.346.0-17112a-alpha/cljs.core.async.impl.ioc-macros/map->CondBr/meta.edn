{:type :fn, :src "(defrecord CondBr [test then-block else-block]\n  IInstruction\n  (reads-from [this] [test])\n  (writes-to [this] [])\n  (block-references [this] [then-block else-block])\n  ITerminator\n  (terminate-block [this state-sym _]\n    `(do (if ~test\n           (aset-all! ~state-sym\n                      ~STATE-IDX ~then-block)\n           (aset-all! ~state-sym\n                      ~STATE-IDX ~else-block))\n         :recur)))", :ns "cljs.core.async.impl.ioc-macros", :name "map->CondBr", :file "cljs/core/async/impl/ioc_macros.clj", :column 1, :line 333, :arglists ([m__6206__auto__]), :doc "Factory function for class cljs.core.async.impl.ioc_macros.CondBr, taking a map of keywords to field values."}