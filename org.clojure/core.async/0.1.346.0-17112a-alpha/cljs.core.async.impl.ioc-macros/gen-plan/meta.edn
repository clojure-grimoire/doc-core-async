{:ns "cljs.core.async.impl.ioc-macros", :name "gen-plan", :file "cljs/core/async/impl/ioc_macros.clj", :type :macro, :src "(defmacro gen-plan\n  \"Allows a user to define a state monad binding plan.\n\n  (gen-plan\n    [_ (assoc-in-plan [:foo :bar] 42)\n     val (get-in-plan [:foo :bar])]\n    val)\"\n  [binds id-expr]\n  (let [binds (partition 2 binds)\n        psym (gensym \"plan_\")\n        forms (reduce\n               (fn [acc [id expr]]\n                 (concat acc `[[~id ~psym] (~expr ~psym)]))\n               []\n               binds)]\n    `(fn [~psym]\n       (let [~@forms]\n         [~id-expr ~psym]))))", :column 1, :line 48, :macro true, :arglists ([binds id-expr]), :doc "Allows a user to define a state monad binding plan.\n\n  (gen-plan\n    [_ (assoc-in-plan [:foo :bar] 42)\n     val (get-in-plan [:foo :bar])]\n    val)"}