{:ns "clojure.core.async.impl.channels", :name "chan", :file "clojure/core/async/impl/channels.clj", :type :fn, :src "(defn chan\n  ([buf] (chan buf nil))\n  ([buf xform] (chan buf xform nil))\n  ([buf xform exh]\n     (ManyToManyChannel.\n      (LinkedList.) (LinkedList.) buf (atom false) (mutex/mutex)\n      (let [add! (if xform (xform impl/add!) impl/add!)]\n        (fn\n          ([buf]\n             (try\n               (add! buf)\n               (catch Throwable t\n                 (handle buf exh t))))\n          ([buf val]\n             (try\n               (add! buf val)\n               (catch Throwable t\n                 (handle buf exh t)))))))))", :column 1, :line 281, :arglists ([buf] [buf xform] [buf xform exh])}