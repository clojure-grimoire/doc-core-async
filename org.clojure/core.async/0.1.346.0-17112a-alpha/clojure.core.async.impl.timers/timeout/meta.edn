{:ns "clojure.core.async.impl.timers", :name "timeout", :file "clojure/core/async/impl/timers.clj", :type :fn, :src "(defn timeout\n  \"returns a channel that will close after msecs\"\n  [^long msecs]\n  (let [timeout (+ (System/currentTimeMillis) msecs)\n        me (.ceilingEntry timeouts-map timeout)]\n    (or (when (and me (< (.getKey me) (+ timeout TIMEOUT_RESOLUTION_MS)))\n          (.channel ^TimeoutQueueEntry (.getValue me)))\n        (let [timeout-channel (channels/chan nil)\n              timeout-entry (TimeoutQueueEntry. timeout-channel timeout)]\n          (.put timeouts-map timeout timeout-entry)\n          (.put timeouts-queue timeout-entry)\n          timeout-channel))))", :column 1, :line 43, :arglists ([msecs]), :doc "returns a channel that will close after msecs"}