{:ns "clojure.core.async", :name "close!", :file "clojure/core/async.clj", :type :fn, :src "(defn close!\n  \"Closes a channel. The channel will no longer accept any puts (they\n  will be ignored). Data in the channel remains available for taking, until\n  exhausted, after which takes will return nil. If there are any\n  pending takes, they will be dispatched with nil. Closing a closed\n  channel is a no-op. Returns nil.\n\n  Logically closing happens after all puts have been delivered. Therefore, any\n  blocked or parked puts will remain blocked/parked until a taker releases them.\"\n\n  [chan]\n  (impl/close! chan))", :column 1, :line 158, :arglists ([chan]), :doc "Closes a channel. The channel will no longer accept any puts (they\n  will be ignored). Data in the channel remains available for taking, until\n  exhausted, after which takes will return nil. If there are any\n  pending takes, they will be dispatched with nil. Closing a closed\n  channel is a no-op. Returns nil.\n\n  Logically closing happens after all puts have been delivered. Therefore, any\n  blocked or parked puts will remain blocked/parked until a taker releases them."}