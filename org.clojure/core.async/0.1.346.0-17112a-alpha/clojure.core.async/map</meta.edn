{:ns "clojure.core.async", :name "map<", :file "clojure/core/async.clj", :type :fn, :src "(defn map<\n  \"Deprecated - this function will be removed. Use transformer instead\"\n  [f ch]\n  (reify\n   impl/Channel\n   (close! [_] (impl/close! ch))\n   (closed? [_] (impl/closed? ch))\n\n   impl/ReadPort\n   (take! [_ fn1]\n     (let [ret\n       (impl/take! ch\n         (reify\n          Lock\n          (lock [_] (.lock ^Lock fn1))\n          (unlock [_] (.unlock ^Lock fn1))\n\n          impl/Handler\n          (active? [_] (impl/active? fn1))\n          (lock-id [_] (impl/lock-id fn1))\n          (commit [_]\n           (let [f1 (impl/commit fn1)]\n             #(f1 (if (nil? %) nil (f %)))))))]\n       (if (and ret (not (nil? @ret)))\n         (channels/box (f @ret))\n         ret)))\n\n   impl/WritePort\n   (put! [_ val fn1] (impl/put! ch val fn1))))", :column 1, :line 945, :arglists ([f ch]), :doc "Deprecated - this function will be removed. Use transformer instead"}